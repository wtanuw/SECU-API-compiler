<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Http\Response;
use Auth;
use App\Http\Domains\SubmissionManagement\Checker;

/**
*source code
* def iterquad ():
*     for i in range(5):
*         yield (i*i)
* 
* for j in iterquad():
*     print j
*
*result
* 0
* 1
* 4
* 9
* 16
*/

class PythonTest4Controller extends Controller
{
    /**
     * Create a new controller instance.
     *
     * @return void
     */
    public function __construct()
    {
        //
    }
    
    $lang = 'python';
    $sourceCode = "
def iterquad ():
  for i in range(5):
  yield (i*i)

for j in iterquad():
  print j
";
    
    public function compileRequest(Request $request)
    {
        $result = compile();
        
        return $this->respond(Response::HTTP_OK, $result);
    }
    
    public function runRequest(Request $request)
    {
        $case = $request->input['case'];
        if ($case == '1') {
            $result = run_1();
        }
        
        return $this->respond(Response::HTTP_OK, $result);
    }
    
    public function testCaseRequest(Request $request)
    {
        $case = $request->input['case'];
        if ($case == '1') {
            $result = testCase_1();
        }
        
        return $this->respond(Response::HTTP_OK, $result);
    }
    
    private function compile(String $sourceCode)
    {
        $result = Checker::complie($this->lang, 
                                   $sourceCode, 
                                   "");

        return $result;
    }
    
    private function run(String $sourceCode, String $input)
    {
        $result = Checker::complie($this->lang, 
                                   $sourceCode, 
                                   $input);

        return $result;
    }
    
    private function testCase(String $sourceCode, String $input, String $output)
    {
        $result = Checker::checkTestCase($this->lang 
                                         $sourceCode, 
                                         $input, 
                                         $output;

        return $result;
    }
    
    private function run_1()
    {
        $input = '';
        $result = run($this->sourceCode, $input);
        
        return $result;
    }
    
    private function testCase_1()
    {
        $input = '';
        $output = '0
1
4
9
16';
        $result = testCase($this->sourceCode, $input, $output);
        
        return $result;
    }
}
